{"ast":null,"code":"import { GET_USERS, GET_NAME_USER, GET_USER_PROFILE, LOG_OUT, GET_PROFILE_USER, SET_LOADING } from \"./actions\";\n\n/**\r\n * Estado inicial de la aplicación\r\n * @type {Object}\r\n * @property {Array} users - Lista de usuarios.\r\n * @property {boolean} isAuthenticated - Indica si el usuario está autenticado.\r\n * @property {Object|null} profileUser - Datos del perfil del usuario.\r\n * @property {boolean} loading - Estado de carga de la aplicación.\r\n * @property {Array} posts - Lista de publicaciones.\r\n */\nconst initialState = {\n  users: [],\n  isAuthenticated: localStorage.getItem(\"isAuthenticated\") === \"true\",\n  profileUser: JSON.parse(localStorage.getItem(\"profileUser\")) || null,\n  loading: false,\n  posts: []\n};\n\n/**\r\n * Reducer principal de la aplicación\r\n * @param {Object} state - Estado actual de la aplicación.\r\n * @param {Object} action - Acción despachada para modificar el estado.\r\n * @returns {Object} - Nuevo estado actualizado.\r\n */\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USERS:\n      return {\n        ...state,\n        users: Array.isArray(action.payload) ? action.payload : []\n      };\n    case GET_NAME_USER:\n      return {\n        ...state,\n        users: Array.isArray(action.payload) ? action.payload : []\n      };\n    case GET_USER_PROFILE:\n      return {\n        ...state,\n        isAuthenticated: true,\n        profileUser: action.payload\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        profileUser: null\n      };\n    case GET_PROFILE_USER:\n      return {\n        ...state,\n        profileUser: action.payload\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n    // Retornar el estado actual si no hay coincidencia\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_USERS","GET_NAME_USER","GET_USER_PROFILE","LOG_OUT","GET_PROFILE_USER","SET_LOADING","initialState","users","isAuthenticated","localStorage","getItem","profileUser","JSON","parse","loading","posts","rootReducer","state","action","type","Array","isArray","payload"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_USERS,\r\n  GET_NAME_USER,\r\n  GET_USER_PROFILE,\r\n  LOG_OUT,\r\n  GET_PROFILE_USER,\r\n  SET_LOADING,\r\n} from \"./actions\";\r\n\r\n/**\r\n * Estado inicial de la aplicación\r\n * @type {Object}\r\n * @property {Array} users - Lista de usuarios.\r\n * @property {boolean} isAuthenticated - Indica si el usuario está autenticado.\r\n * @property {Object|null} profileUser - Datos del perfil del usuario.\r\n * @property {boolean} loading - Estado de carga de la aplicación.\r\n * @property {Array} posts - Lista de publicaciones.\r\n */\r\nconst initialState = {\r\n  users: [],\r\n  isAuthenticated: localStorage.getItem(\"isAuthenticated\") === \"true\",\r\n  profileUser: JSON.parse(localStorage.getItem(\"profileUser\")) || null,\r\n  loading: false,\r\n  posts: [],\r\n};\r\n\r\n/**\r\n * Reducer principal de la aplicación\r\n * @param {Object} state - Estado actual de la aplicación.\r\n * @param {Object} action - Acción despachada para modificar el estado.\r\n * @returns {Object} - Nuevo estado actualizado.\r\n */\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: Array.isArray(action.payload) ? action.payload : [],\r\n      };\r\n\r\n    case GET_NAME_USER:\r\n      return {\r\n        ...state,\r\n        users: Array.isArray(action.payload) ? action.payload : [],\r\n      };\r\n\r\n    case GET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        profileUser: action.payload,\r\n      };\r\n\r\n    case LOG_OUT:\r\n      return { ...state, isAuthenticated: false, profileUser: null };\r\n\r\n    case GET_PROFILE_USER:\r\n      return {\r\n        ...state,\r\n        profileUser: action.payload,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return { ...state, loading: action.payload };\r\n\r\n    default:\r\n      return state; // Retornar el estado actual si no hay coincidencia\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,aAAa,EACbC,gBAAgB,EAChBC,OAAO,EACPC,gBAAgB,EAChBC,WAAW,QACN,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;EACnEC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,IAAI;EACpEI,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGX,YAAY,EAAEY,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKnB,SAAS;MACZ,OAAO;QACL,GAAGiB,KAAK;QACRV,KAAK,EAAEa,KAAK,CAACC,OAAO,CAACH,MAAM,CAACI,OAAO,CAAC,GAAGJ,MAAM,CAACI,OAAO,GAAG;MAC1D,CAAC;IAEH,KAAKrB,aAAa;MAChB,OAAO;QACL,GAAGgB,KAAK;QACRV,KAAK,EAAEa,KAAK,CAACC,OAAO,CAACH,MAAM,CAACI,OAAO,CAAC,GAAGJ,MAAM,CAACI,OAAO,GAAG;MAC1D,CAAC;IAEH,KAAKpB,gBAAgB;MACnB,OAAO;QACL,GAAGe,KAAK;QACRT,eAAe,EAAE,IAAI;QACrBG,WAAW,EAAEO,MAAM,CAACI;MACtB,CAAC;IAEH,KAAKnB,OAAO;MACV,OAAO;QAAE,GAAGc,KAAK;QAAET,eAAe,EAAE,KAAK;QAAEG,WAAW,EAAE;MAAK,CAAC;IAEhE,KAAKP,gBAAgB;MACnB,OAAO;QACL,GAAGa,KAAK;QACRN,WAAW,EAAEO,MAAM,CAACI;MACtB,CAAC;IAEH,KAAKjB,WAAW;MACd,OAAO;QAAE,GAAGY,KAAK;QAAEH,OAAO,EAAEI,MAAM,CAACI;MAAQ,CAAC;IAE9C;MACE,OAAOL,KAAK;IAAE;EAClB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}