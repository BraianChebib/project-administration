{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\administracion proyect\\\\client\\\\client\\\\src\\\\components\\\\Posts\\\\GetPosts.jsx\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts, getUsers } from \"../../redux/actions\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetPosts = () => {\n  // const posts = useSelector((state) => state.posts);\n  // const dispatch = useDispatch();\n\n  const getAllPosts = async () => {\n    try {\n      await dispatch(getPosts()); // Esto recargará el perfil del usuario con los posts actualizados\n    } catch (error) {\n      console.error(\"Error al recargar el perfil:\", error);\n    }\n  };\n  // useEffect(() => {\n  //   dispatch(getUsers());\n  //   dispatch(getPosts());\n  // }, [dispatch]);\n  // console.log(posts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"soy el postscsasd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = GetPosts;\nexport default GetPosts;\nvar _c;\n$RefreshReg$(_c, \"GetPosts\");","map":{"version":3,"names":["useDispatch","useSelector","getPosts","getUsers","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","GetPosts","getAllPosts","dispatch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/components/Posts/GetPosts.jsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts, getUsers } from \"../../redux/actions\";\r\nimport { useEffect } from \"react\";\r\nconst GetPosts = () => {\r\n  // const posts = useSelector((state) => state.posts);\r\n  // const dispatch = useDispatch();\r\n\r\n  const getAllPosts = async () => {\r\n    try {\r\n      await dispatch(getPosts()); // Esto recargará el perfil del usuario con los posts actualizados\r\n    } catch (error) {\r\n      console.error(\"Error al recargar el perfil:\", error);\r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //   dispatch(getUsers());\r\n  //   dispatch(getPosts());\r\n  // }, [dispatch]);\r\n  // console.log(posts);\r\n  return (\r\n    <>\r\n      <p>soy el postscsasd</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetPosts;\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,qBAAqB;AACxD,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAClC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB;EACA;;EAEA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,CAACT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EACD;EACA;EACA;EACA;EACA;EACA,oBACEN,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA;MAAAQ,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC,gBACxB,CAAC;AAEP,CAAC;AAACC,EAAA,GArBIV,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}