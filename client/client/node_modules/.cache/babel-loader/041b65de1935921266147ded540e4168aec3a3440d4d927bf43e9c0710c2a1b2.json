{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\administracion proyect\\\\client\\\\client\\\\src\\\\components\\\\Posts\\\\GetPosts.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetPosts = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    userId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n\n  // Función para cargar los posts\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3001/posts/${userId}`);\n      setPosts(response.data);\n    } catch (error) {\n      console.error(\"Error al cargar los posts:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, [userId]); // Se ejecuta cada vez que userId cambia o se monta el componente\n\n  const editCommentHandler = postId => {\n    navigate(`/editPosts/${userId}/${postId}`);\n  };\n  const onClickNewPostHandler = () => {\n    navigate(`/createPost/${userId}`);\n  };\n  const onclickDeleteHandler = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/postUser/deletePost/${id}`);\n      alert(\"Posteo eliminado correctamente\");\n      fetchPosts(); // Recargar los posts después de eliminar\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.length > 0 ? posts.map(us => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: us.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editCommentHandler(us.id),\n          children: \"Edit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onclickDeleteHandler(us.id),\n          children: \"Delete Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, us.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickNewPostHandler,\n      children: \"crear un nuevo Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GetPosts, \"fX25b4sFuE3eVjRMB0t/6Ze4pgM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = GetPosts;\nexport default GetPosts;\nvar _c;\n$RefreshReg$(_c, \"GetPosts\");","map":{"version":3,"names":["axios","useEffect","useState","useSelector","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","GetPosts","_s","navigate","userId","posts","setPosts","fetchPosts","response","get","data","error","console","editCommentHandler","postId","onClickNewPostHandler","onclickDeleteHandler","id","delete","alert","children","length","map","us","comment","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/components/Posts/GetPosts.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst GetPosts = () => {\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  // Función para cargar los posts\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/posts/${userId}`);\r\n      setPosts(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error al cargar los posts:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [userId]); // Se ejecuta cada vez que userId cambia o se monta el componente\r\n\r\n  const editCommentHandler = (postId) => {\r\n    navigate(`/editPosts/${userId}/${postId}`);\r\n  };\r\n\r\n  const onClickNewPostHandler = () => {\r\n    navigate(`/createPost/${userId}`);\r\n  };\r\n\r\n  const onclickDeleteHandler = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/postUser/deletePost/${id}`);\r\n      alert(\"Posteo eliminado correctamente\");\r\n      fetchPosts(); // Recargar los posts después de eliminar\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {posts.length > 0 ? (\r\n          posts.map((us) => (\r\n            <li key={us.id}>\r\n              <h1>{us.comment}</h1>\r\n              <button onClick={() => editCommentHandler(us.id)}>\r\n                Edit Comment\r\n              </button>\r\n              <button onClick={() => onclickDeleteHandler(us.id)}>\r\n                Delete Post\r\n              </button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>Cargando...</p>\r\n        )}\r\n      </ul>\r\n      <button onClick={onClickNewPostHandler}>crear un nuevo Post</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}