{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\administracion proyect\\\\client\\\\client\\\\src\\\\views\\\\Detail\\\\Detail.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { refreshProfileUser, getUsers } from \"../../redux/actions\";\nimport { useDispatch } from \"react-redux\";\nimport \"./Detail.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Extrae el ID del usuario de la URL\n  const [user, setUser] = useState(null); // Estado para almacenar los datos del usuario\n  const navigate = useNavigate(); // Hook para la navegación programática\n  const dispatch = useDispatch(); // Hook para despachar acciones de Redux\n\n  // useEffect que carga los detalles del usuario al montar el componente\n  useEffect(() => {\n    const getDetailUser = async () => {\n      try {\n        const detailUser = await axios.get(`http://localhost:3001/users/${id}`);\n        setUser(detailUser.data); // Establece el estado del usuario con los datos obtenidos\n      } catch (error) {\n        console.error(\"Error al obtener los detalles del usuario:\", error);\n        alert(\"Error al obtener los detalles del usuario.\");\n      }\n    };\n    getDetailUser();\n  }, [id]);\n\n  // Función para manejar la eliminación del usuario\n  const deleteHandlerUser = async () => {\n    const deleteUser = window.confirm(\"¿Estás seguro de que deseas eliminar este usuario?\");\n    if (deleteUser) {\n      try {\n        await axios.delete(`http://localhost:3001/users/deleteUser/${id}`);\n        alert(\"Usuario eliminado\");\n        dispatch(getUsers()); // Actualiza la lista de usuarios en Redux\n        navigate(\"/home\"); // Redirige al home\n      } catch (error) {\n        alert(\"Error al eliminar el usuario: \" + error.message);\n      }\n    }\n  };\n\n  // Función para eliminar un post específico\n  const onclickDeletePostHandler = async postId => {\n    const confirmDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este post?\");\n    if (confirmDelete) {\n      try {\n        await axios.delete(`http://localhost:3001/postUser/deletePost/${postId}`);\n        alert(\"Post eliminado correctamente\");\n\n        // Filtra el post eliminado del estado local\n        const updatedPosts = user.Posts.filter(post => post.id !== postId);\n        setUser({\n          ...user,\n          Posts: updatedPosts\n        }); // Actualiza los posts en el estado\n        dispatch(getUsers()); // Actualiza la lista de usuarios\n        navigate(\"/home\"); // Redirige al home\n      } catch (error) {\n        alert(\"Error al eliminar el post: \" + error.message);\n      }\n    }\n  };\n\n  // Función para manejar la navegación de vuelta a la vista Home\n  const onClickBackHandler = () => {\n    navigate(\"/home\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [user.name, \" \", user.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.image,\n          alt: `${user.name} ${user.lastName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dateUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tel\\xE9fono: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), user.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Usuario:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), \" \", user.nameUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contrase\\xF1a:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \" \", user.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postsUser\",\n        children: user.Posts && user.Posts.length > 0 ? user.Posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardsContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onclickDeletePostHandler(post.id),\n            className: \"deletePost\",\n            children: \"Delete post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando detalles del usuario...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) // Mensaje de carga\n    , /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonModifyUser\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteHandlerUser,\n        className: \"deleteUser\",\n        children: \"Delete User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickBackHandler,\n        className: \"backButton\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"P0vMNCM1zdrh4cMXUH1ar4Z2Fo8=\", false, function () {\n  return [useParams, useNavigate, useDispatch];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["useNavigate","useParams","axios","useEffect","useState","refreshProfileUser","getUsers","useDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","Detail","_s","id","user","setUser","navigate","dispatch","getDetailUser","detailUser","get","data","error","console","alert","deleteHandlerUser","deleteUser","window","confirm","delete","message","onclickDeletePostHandler","postId","confirmDelete","updatedPosts","Posts","filter","post","onClickBackHandler","className","children","name","lastName","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","email","phone","nameUser","password","length","map","comment","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/views/Detail/Detail.jsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { refreshProfileUser, getUsers } from \"../../redux/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./Detail.css\";\r\n\r\nconst Detail = () => {\r\n  const { id } = useParams(); // Extrae el ID del usuario de la URL\r\n  const [user, setUser] = useState(null); // Estado para almacenar los datos del usuario\r\n  const navigate = useNavigate(); // Hook para la navegación programática\r\n  const dispatch = useDispatch(); // Hook para despachar acciones de Redux\r\n\r\n  // useEffect que carga los detalles del usuario al montar el componente\r\n  useEffect(() => {\r\n    const getDetailUser = async () => {\r\n      try {\r\n        const detailUser = await axios.get(`http://localhost:3001/users/${id}`);\r\n        setUser(detailUser.data); // Establece el estado del usuario con los datos obtenidos\r\n      } catch (error) {\r\n        console.error(\"Error al obtener los detalles del usuario:\", error);\r\n        alert(\"Error al obtener los detalles del usuario.\");\r\n      }\r\n    };\r\n    getDetailUser();\r\n  }, [id]);\r\n\r\n  // Función para manejar la eliminación del usuario\r\n  const deleteHandlerUser = async () => {\r\n    const deleteUser = window.confirm(\r\n      \"¿Estás seguro de que deseas eliminar este usuario?\"\r\n    );\r\n    if (deleteUser) {\r\n      try {\r\n        await axios.delete(`http://localhost:3001/users/deleteUser/${id}`);\r\n        alert(\"Usuario eliminado\");\r\n\r\n        dispatch(getUsers()); // Actualiza la lista de usuarios en Redux\r\n        navigate(\"/home\"); // Redirige al home\r\n      } catch (error) {\r\n        alert(\"Error al eliminar el usuario: \" + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Función para eliminar un post específico\r\n  const onclickDeletePostHandler = async (postId) => {\r\n    const confirmDelete = window.confirm(\r\n      \"¿Estás seguro de que deseas eliminar este post?\"\r\n    );\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(\r\n          `http://localhost:3001/postUser/deletePost/${postId}`\r\n        );\r\n        alert(\"Post eliminado correctamente\");\r\n\r\n        // Filtra el post eliminado del estado local\r\n        const updatedPosts = user.Posts.filter((post) => post.id !== postId);\r\n        setUser({ ...user, Posts: updatedPosts }); // Actualiza los posts en el estado\r\n        dispatch(getUsers()); // Actualiza la lista de usuarios\r\n        navigate(\"/home\"); // Redirige al home\r\n      } catch (error) {\r\n        alert(\"Error al eliminar el post: \" + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Función para manejar la navegación de vuelta a la vista Home\r\n  const onClickBackHandler = () => {\r\n    navigate(\"/home\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {user ? (\r\n        <>\r\n          <div className=\"headContainer\">\r\n            <h1>\r\n              {user.name} {user.lastName}\r\n            </h1>\r\n            <img src={user.image} alt={`${user.name} ${user.lastName}`} />\r\n          </div>\r\n\r\n          <div className=\"dateUser\">\r\n            <p>\r\n              <strong>Email: </strong>\r\n              {user.email}\r\n            </p>\r\n            <p>\r\n              <strong>Teléfono: </strong>\r\n              {user.phone}\r\n            </p>\r\n            <p>\r\n              <strong>Usuario:</strong> {user.nameUser}\r\n            </p>\r\n            <p>\r\n              <strong>Contraseña:</strong> {user.password}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Renderiza los posts del usuario */}\r\n          <div className=\"postsUser\">\r\n            {user.Posts && user.Posts.length > 0 ? (\r\n              user.Posts.map((post) => (\r\n                <div key={post.id} className=\"cardsContainer\">\r\n                  <p>{post.comment}</p>\r\n                  <button\r\n                    onClick={() => onclickDeletePostHandler(post.id)}\r\n                    className=\"deletePost\"\r\n                  >\r\n                    Delete post\r\n                  </button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No posts available.</p>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Cargando detalles del usuario...</p> // Mensaje de carga\r\n      )}\r\n\r\n      <div className=\"buttonModifyUser\">\r\n        <button onClick={deleteHandlerUser} className=\"deleteUser\">\r\n          Delete User\r\n        </button>\r\n\r\n        <button onClick={onClickBackHandler} className=\"backButton\">\r\n          Back\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}