{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\administracion proyect\\\\client\\\\client\\\\src\\\\components\\\\Posts\\\\CreatePosts\\\\CreatePost.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./CreatePosts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const {\n    userId\n  } = useParams(); // Obtener userId de los parámetros de la URL\n  const [postData, setPostData] = useState({\n    comment: \"\",\n    UserId: userId\n  }); // Estado para manejar los datos del post\n  const navigate = useNavigate(); // Hook para navegar entre rutas\n\n  // Manejar cambios en el input del comentario\n  const onChangeInputHandler = e => {\n    const newComment = e.target.value; // Capturar el nuevo valor del input\n    setPostData(prevState => ({\n      ...prevState,\n      comment: newComment\n    })); // Actualizar el estado\n  };\n\n  // Manejar el envío del formulario\n  const onSubmitHandler = async e => {\n    e.preventDefault(); // Prevenir el comportamiento por defecto del formulario\n\n    try {\n      // Realizar la petición POST para crear el post\n      await axios.post(\"http://localhost:3001/postUser/\", postData);\n      navigate(`/posts/${userId}`); // Redirigir al usuario a la lista de posts\n    } catch (error) {\n      console.error(\"Error al crear el post:\", error); // Manejo de errores en la consola\n      alert(\"Error al crear el post. Por favor, inténtalo de nuevo.\"); // Alerta al usuario en caso de error\n    }\n  };\n\n  // Manejar el clic en el botón de retroceso\n  const onClickHandler = () => {\n    navigate(`/posts/${userId}`); // Navegar de vuelta a la lista de posts\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ingrese el posteo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: postData.comment // Usar postData para el valor del input\n          ,\n          onChange: onChangeInputHandler // Cambiar el comentario al modificar el input\n          ,\n          required: true // Asegurar que el campo no esté vacío\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backButtonContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickHandler,\n          className: \"backButton\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"ZsH+nMrVZNnyFVTORsjz8JcbEfQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","CreatePost","_s","userId","postData","setPostData","comment","UserId","navigate","onChangeInputHandler","e","newComment","target","value","prevState","onSubmitHandler","preventDefault","post","error","console","alert","onClickHandler","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/components/Posts/CreatePosts/CreatePost.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./CreatePosts.css\";\r\n\r\nconst CreatePost = () => {\r\n  const { userId } = useParams(); // Obtener userId de los parámetros de la URL\r\n  const [postData, setPostData] = useState({ comment: \"\", UserId: userId }); // Estado para manejar los datos del post\r\n  const navigate = useNavigate(); // Hook para navegar entre rutas\r\n\r\n  // Manejar cambios en el input del comentario\r\n  const onChangeInputHandler = (e) => {\r\n    const newComment = e.target.value; // Capturar el nuevo valor del input\r\n    setPostData((prevState) => ({ ...prevState, comment: newComment })); // Actualizar el estado\r\n  };\r\n\r\n  // Manejar el envío del formulario\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault(); // Prevenir el comportamiento por defecto del formulario\r\n\r\n    try {\r\n      // Realizar la petición POST para crear el post\r\n      await axios.post(\"http://localhost:3001/postUser/\", postData);\r\n      navigate(`/posts/${userId}`); // Redirigir al usuario a la lista de posts\r\n    } catch (error) {\r\n      console.error(\"Error al crear el post:\", error); // Manejo de errores en la consola\r\n      alert(\"Error al crear el post. Por favor, inténtalo de nuevo.\"); // Alerta al usuario en caso de error\r\n    }\r\n  };\r\n\r\n  // Manejar el clic en el botón de retroceso\r\n  const onClickHandler = () => {\r\n    navigate(`/posts/${userId}`); // Navegar de vuelta a la lista de posts\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"formContainer\">\r\n        <form onSubmit={onSubmitHandler}>\r\n          <h3>Ingrese el posteo</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={postData.comment} // Usar postData para el valor del input\r\n            onChange={onChangeInputHandler} // Cambiar el comentario al modificar el input\r\n            required // Asegurar que el campo no esté vacío\r\n          />\r\n          <button type=\"submit\">Enviar</button>\r\n        </form>\r\n        <div className=\"backButtonContainer\">\r\n          <button onClick={onClickHandler} className=\"backButton\">\r\n            Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}