{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\administracion proyect\\\\client\\\\client\\\\src\\\\components\\\\Posts\\\\GetPosts\\\\GetPostsUser.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { refreshProfileUser } from \"../../../redux/actions\";\nimport { useEffect } from \"react\";\nimport \"./Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetPostsUser = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    userId\n  } = useParams();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.profileUser);\n\n  // Recargar los datos del perfil\n  const refreshProfile = async () => {\n    try {\n      await dispatch(refreshProfileUser(userId)); // Esto recargará el perfil del usuario con los posts actualizados\n    } catch (error) {\n      console.error(\"Error al recargar el perfil:\", error);\n    }\n  };\n  useEffect(() => {\n    // Recargar el perfil del usuario cuando el componente se monte o el userId cambie\n    refreshProfile();\n  }, [userId]);\n  const editCommentHandler = async postId => {\n    navigate(`/editPosts/${userId}/${postId}`);\n    await refreshProfile(); // Recargar el perfil después de editar\n  };\n  const onClickNewPostHandler = async () => {\n    navigate(`/createPost/${userId}`);\n    await refreshProfile(); // Recargar el perfil después de crear\n  };\n  const onclickDeleteHandler = async id => {\n    const confirmDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este post?\");\n    if (confirmDelete) {\n      try {\n        await axios.delete(`http://localhost:3001/postUser/deletePost/${id}`);\n        alert(\"Posteo eliminado correctamente\");\n        await refreshProfile();\n      } catch (error) {\n        alert(\"Error al eliminar el post: \" + error.message);\n      }\n    }\n  };\n  const onClickBackHandler = () => {\n    navigate(\"/userProfile\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Posts User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allPotsUser\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), user.Posts && user.Posts.length > 0 ? user.Posts.map(us => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemPostUser\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: us.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itemPostUserButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editCommentHandler(us.id),\n              children: \"Edit Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onclickDeleteHandler(us.id),\n              className: \"deletePost\",\n              children: \"Delete Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemPostUserButton\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickNewPostHandler,\n        children: \"Crear un nuevo Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickBackHandler,\n        className: \"backButton\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(GetPostsUser, \"VH32y/QDSt/Yu+0E+HKtc/Iql74=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector];\n});\n_c = GetPostsUser;\nexport default GetPostsUser;\nvar _c;\n$RefreshReg$(_c, \"GetPostsUser\");","map":{"version":3,"names":["axios","useDispatch","useSelector","useNavigate","useParams","refreshProfileUser","useEffect","jsxDEV","_jsxDEV","GetPostsUser","_s","navigate","userId","dispatch","user","state","profileUser","refreshProfile","error","console","editCommentHandler","postId","onClickNewPostHandler","onclickDeleteHandler","id","confirmDelete","window","confirm","delete","alert","message","onClickBackHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","Posts","length","map","us","comment","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/components/Posts/GetPosts/GetPostsUser.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { refreshProfileUser } from \"../../../redux/actions\";\r\nimport { useEffect } from \"react\";\r\nimport \"./Posts.css\";\r\n\r\nconst GetPostsUser = () => {\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.profileUser);\r\n\r\n  // Recargar los datos del perfil\r\n  const refreshProfile = async () => {\r\n    try {\r\n      await dispatch(refreshProfileUser(userId)); // Esto recargará el perfil del usuario con los posts actualizados\r\n    } catch (error) {\r\n      console.error(\"Error al recargar el perfil:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Recargar el perfil del usuario cuando el componente se monte o el userId cambie\r\n    refreshProfile();\r\n  }, [userId]);\r\n\r\n  const editCommentHandler = async (postId) => {\r\n    navigate(`/editPosts/${userId}/${postId}`);\r\n    await refreshProfile(); // Recargar el perfil después de editar\r\n  };\r\n\r\n  const onClickNewPostHandler = async () => {\r\n    navigate(`/createPost/${userId}`);\r\n    await refreshProfile(); // Recargar el perfil después de crear\r\n  };\r\n\r\n  const onclickDeleteHandler = async (id) => {\r\n    const confirmDelete = window.confirm(\r\n      \"¿Estás seguro de que deseas eliminar este post?\"\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(`http://localhost:3001/postUser/deletePost/${id}`);\r\n        alert(\"Posteo eliminado correctamente\");\r\n        await refreshProfile();\r\n      } catch (error) {\r\n        alert(\"Error al eliminar el post: \" + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickBackHandler = () => {\r\n    navigate(\"/userProfile\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>Posts User</h3>\r\n\r\n      <div className=\"allPotsUser\">\r\n        <p>{user.name}</p>\r\n        {user.Posts && user.Posts.length > 0 ? (\r\n          user.Posts.map((us) => {\r\n            return (\r\n              <div className=\"itemPostUser\">\r\n                <div>\r\n                  <h4>{us.comment}</h4>\r\n                </div>\r\n                <div className=\"itemPostUserButton\">\r\n                  <button onClick={() => editCommentHandler(us.id)}>\r\n                    Edit Comment\r\n                  </button>\r\n                  <button\r\n                    onClick={() => onclickDeleteHandler(us.id)}\r\n                    className=\"deletePost\"\r\n                  >\r\n                    Delete Post\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Cargando...</p>\r\n        )}\r\n      </div>\r\n      <div className=\"itemPostUserButton\">\r\n        <button onClick={onClickNewPostHandler}>Crear un nuevo Post</button>\r\n        <button onClick={onClickBackHandler} className=\"backButton\">\r\n          Back\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetPostsUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}