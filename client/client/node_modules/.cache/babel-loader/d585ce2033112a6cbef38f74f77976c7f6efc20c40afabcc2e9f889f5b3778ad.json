{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\administracion proyect\\\\client\\\\client\\\\src\\\\components\\\\Posts\\\\GetPosts.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getUsers } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetPosts = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    userId\n  } = useParams();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.profileUser);\n  useEffect(() => {}, [dispatch, user]);\n  const editCommentHandler = postId => {\n    navigate(`/editPosts/${userId}/${postId}`);\n  };\n  const onClickNewPostHandler = () => {\n    navigate(`/createPost/${userId}`);\n  };\n  const onclickDeleteHandler = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/postUser/deletePost/${id}`);\n      alert(\"Posteo eliminado correctamente\");\n      navigate(\"/userProfile\");\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [user.Posts && user.Posts.length > 0 ? user.Posts.map(us => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: us.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), \";\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editCommentHandler(us.id),\n              children: \"Edit Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onclickDeleteHandler(us.id),\n              children: \"Delete Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, us.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickNewPostHandler,\n        children: \"crear un nuevo Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(GetPosts, \"VH32y/QDSt/Yu+0E+HKtc/Iql74=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector];\n});\n_c = GetPosts;\nexport default GetPosts;\nvar _c;\n$RefreshReg$(_c, \"GetPosts\");","map":{"version":3,"names":["axios","useEffect","useDispatch","useSelector","useNavigate","useParams","getUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","GetPosts","_s","navigate","userId","dispatch","user","state","profileUser","editCommentHandler","postId","onClickNewPostHandler","onclickDeleteHandler","id","delete","alert","error","children","Posts","length","map","us","comment","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/components/Posts/GetPosts.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { getUsers } from \"../../redux/actions\";\r\n\r\nconst GetPosts = () => {\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.profileUser);\r\n  useEffect(() => {}, [dispatch, user]);\r\n\r\n  const editCommentHandler = (postId) => {\r\n    navigate(`/editPosts/${userId}/${postId}`);\r\n  };\r\n\r\n  const onClickNewPostHandler = () => {\r\n    navigate(`/createPost/${userId}`);\r\n  };\r\n\r\n  const onclickDeleteHandler = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/postUser/deletePost/${id}`);\r\n      alert(\"Posteo eliminado correctamente\");\r\n      navigate(\"/userProfile\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        {user.Posts && user.Posts.length > 0 ? (\r\n          user.Posts.map((us) => {\r\n            return (\r\n              <>\r\n                <li key={us.id}>\r\n                  <h1>{us.comment}</h1>;\r\n                  <button onClick={() => editCommentHandler(us.id)}>\r\n                    Edit Comment\r\n                  </button>\r\n                  <button onClick={() => onclickDeleteHandler(us.id)}>\r\n                    Delete Post\r\n                  </button>\r\n                </li>\r\n              </>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Cargando...</p>\r\n        )}\r\n        <button onClick={onClickNewPostHandler}>crear un nuevo Post</button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}