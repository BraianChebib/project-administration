{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\administracion proyect\\\\client\\\\client\\\\src\\\\views\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport style from \"./Form.module.css\";\nimport axios from \"axios\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { gapi } from \"gapi-script\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserProfile } from \"../../redux/actions\";\nimport { useDispatch } from \"react-redux\";\n\n// Inicializa el cliente de Google para autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initGoogleClient = () => {\n  gapi.client.init({\n    clientId: \"133661170359-fkebjnpt8sudfqujbcjbjrtj1cc8veoc.apps.googleusercontent.com\"\n  });\n};\nconst Form = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // Estado para manejar los datos del formulario\n  const [form, setForm] = useState({\n    name: \"\",\n    lastName: \"\",\n    image: \"\",\n    email: \"\",\n    phone: \"\",\n    nameUser: \"\",\n    password: \"\"\n  });\n\n  // Estado para los errores del formulario\n  const [errors, setErrors] = useState({\n    email: \"\"\n  });\n\n  // Efecto para cargar el cliente de Google cuando el componente se monta\n  useEffect(() => {\n    gapi.load(\"client:auth2\", initGoogleClient);\n  }, []);\n\n  // Función para validar el campo de email\n  const validateEmail = email => {\n    if (!email) return \"Campo vacío\";\n    const isValid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/.test(email);\n    return isValid ? \"\" : \"Email incorrecto\";\n  };\n\n  // Función para validar el formulario completo\n  const validateForm = form => {\n    const emailError = validateEmail(form.email);\n    setErrors({\n      email: emailError\n    });\n    return !emailError; // Retorna true si no hay errores\n  };\n\n  // Maneja los cambios en los campos del formulario\n  const onChangeHandler = useCallback(event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value\n    })); // Actualiza el estado del formulario\n    validateForm({\n      ...form,\n      [name]: value\n    }); // Valida el campo actualizado\n  }, [form]);\n\n  // Maneja la subida de imágenes y actualiza el estado con la URL de Cloudinary\n  const onImageUploadHandler = async event => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"upload_preset\", \"ucyfuf2e\");\n    try {\n      const response = await axios.post(\"https://api.cloudinary.com/v1_1/dekk238ao/image/upload\", formData);\n      setForm(prevForm => ({\n        ...prevForm,\n        image: response.data.secure_url\n      })); // Actualiza el campo de imagen con la URL\n    } catch (error) {\n      alert(\"Error al subir la imagen\");\n    }\n  };\n\n  // Genera una cadena aleatoria para usar como contraseña o nombre de usuario\n  const generateRandomString = length => {\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    return Array.from({\n      length\n    }, () => characters.charAt(Math.floor(Math.random() * characters.length))).join(\"\");\n  };\n\n  // Maneja el envío del formulario\n  const submitHandler = async event => {\n    event.preventDefault();\n    if (validateForm(form)) {\n      try {\n        await axios.post(\"http://localhost:3001/users/createUser\", form); // Crea un nuevo usuario en la base de datos\n        alert(\"Usuario creado\");\n      } catch (err) {\n        var _err$response, _err$response$data;\n        alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Error en la creación del usuario\");\n      }\n    }\n  };\n\n  // Maneja la autenticación exitosa con Google\n  const onSuccessGoogle = async response => {\n    const {\n      givenName,\n      familyName,\n      email,\n      imageUrl\n    } = response.profileObj;\n    const randomPhone = `+1${Math.floor(Math.random() * 9000000000) + 1000000000}`; // Genera un número de teléfono aleatorio\n    const randomNameUser = `${givenName}${familyName}${Math.floor(Math.random() * 1000)}`; // Genera un nombre de usuario aleatorio\n    const randomPassword = generateRandomString(12); // Genera una contraseña aleatoria\n\n    setForm({\n      name: givenName,\n      lastName: familyName,\n      email,\n      image: imageUrl,\n      phone: randomPhone,\n      nameUser: randomNameUser,\n      password: randomPassword\n    });\n    try {\n      const res = await axios.post(\"http://localhost:3001/users/createUser\", {\n        name: givenName,\n        lastName: familyName,\n        email,\n        image: imageUrl,\n        phone: randomPhone,\n        nameUser: randomNameUser,\n        password: randomPassword\n      });\n      alert(\"Usuario creado con Google: \" + res.data.message);\n      const authenticated = await dispatch(getUserProfile({\n        nameUser: randomNameUser,\n        password: randomPassword\n      }));\n      if (authenticated) navigate(\"/userProfile\"); // Redirige al perfil del usuario\n    } catch (error) {\n      alert(\"Usuario ya existente, por favor modifique los datos\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.mainContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: form.name,\n          onChange: onChangeHandler,\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"LastName: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: form.lastName,\n          onChange: onChangeHandler,\n          name: \"lastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onImageUploadHandler,\n          name: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), form.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: form.image,\n          alt: \"Imagen subida\",\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: form.email,\n          onChange: onChangeHandler,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: form.phone,\n          onChange: onChangeHandler,\n          name: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"NameUser: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: form.nameUser,\n          onChange: onChangeHandler,\n          name: \"nameUser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: form.password,\n          onChange: onChangeHandler,\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.oauthContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"O inicia sesi\\xF3n con Google:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"133661170359-fkebjnpt8sudfqujbcjbjrtj1cc8veoc.apps.googleusercontent.com\",\n        buttonText: \"Login with Google\",\n        onSuccess: onSuccessGoogle,\n        cookiePolicy: \"single_host_origin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"kFM5u0YNIbZbWRniQTPelgqhxr4=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","useEffect","useCallback","style","axios","GoogleLogin","gapi","useNavigate","getUserProfile","useDispatch","jsxDEV","_jsxDEV","initGoogleClient","client","init","clientId","Form","_s","navigate","dispatch","form","setForm","name","lastName","image","email","phone","nameUser","password","errors","setErrors","load","validateEmail","isValid","test","validateForm","emailError","onChangeHandler","event","value","target","prevForm","onImageUploadHandler","file","files","formData","FormData","append","response","post","data","secure_url","error","alert","generateRandomString","length","characters","Array","from","charAt","Math","floor","random","join","submitHandler","preventDefault","err","_err$response","_err$response$data","onSuccessGoogle","givenName","familyName","imageUrl","profileObj","randomPhone","randomNameUser","randomPassword","res","message","authenticated","children","onSubmit","className","mainContainer","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","src","alt","width","oauthContainer","buttonText","onSuccess","cookiePolicy","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/views/Form/Form.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport style from \"./Form.module.css\";\r\nimport axios from \"axios\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { gapi } from \"gapi-script\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUserProfile } from \"../../redux/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// Inicializa el cliente de Google para autenticación\r\nconst initGoogleClient = () => {\r\n  gapi.client.init({\r\n    clientId:\r\n      \"133661170359-fkebjnpt8sudfqujbcjbjrtj1cc8veoc.apps.googleusercontent.com\",\r\n  });\r\n};\r\n\r\nconst Form = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  // Estado para manejar los datos del formulario\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    lastName: \"\",\r\n    image: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    nameUser: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  // Estado para los errores del formulario\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  // Efecto para cargar el cliente de Google cuando el componente se monta\r\n  useEffect(() => {\r\n    gapi.load(\"client:auth2\", initGoogleClient);\r\n  }, []);\r\n\r\n  // Función para validar el campo de email\r\n  const validateEmail = (email) => {\r\n    if (!email) return \"Campo vacío\";\r\n    const isValid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/.test(email);\r\n    return isValid ? \"\" : \"Email incorrecto\";\r\n  };\r\n\r\n  // Función para validar el formulario completo\r\n  const validateForm = (form) => {\r\n    const emailError = validateEmail(form.email);\r\n    setErrors({ email: emailError });\r\n    return !emailError; // Retorna true si no hay errores\r\n  };\r\n\r\n  // Maneja los cambios en los campos del formulario\r\n  const onChangeHandler = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      setForm((prevForm) => ({ ...prevForm, [name]: value })); // Actualiza el estado del formulario\r\n      validateForm({ ...form, [name]: value }); // Valida el campo actualizado\r\n    },\r\n    [form]\r\n  );\r\n\r\n  // Maneja la subida de imágenes y actualiza el estado con la URL de Cloudinary\r\n  const onImageUploadHandler = async (event) => {\r\n    const file = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"ucyfuf2e\");\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/dekk238ao/image/upload\",\r\n        formData\r\n      );\r\n      setForm((prevForm) => ({ ...prevForm, image: response.data.secure_url })); // Actualiza el campo de imagen con la URL\r\n    } catch (error) {\r\n      alert(\"Error al subir la imagen\");\r\n    }\r\n  };\r\n\r\n  // Genera una cadena aleatoria para usar como contraseña o nombre de usuario\r\n  const generateRandomString = (length) => {\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    return Array.from({ length }, () =>\r\n      characters.charAt(Math.floor(Math.random() * characters.length))\r\n    ).join(\"\");\r\n  };\r\n\r\n  // Maneja el envío del formulario\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (validateForm(form)) {\r\n      try {\r\n        await axios.post(\"http://localhost:3001/users/createUser\", form); // Crea un nuevo usuario en la base de datos\r\n        alert(\"Usuario creado\");\r\n      } catch (err) {\r\n        alert(err.response?.data?.error || \"Error en la creación del usuario\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Maneja la autenticación exitosa con Google\r\n  const onSuccessGoogle = async (response) => {\r\n    const { givenName, familyName, email, imageUrl } = response.profileObj;\r\n    const randomPhone = `+1${\r\n      Math.floor(Math.random() * 9000000000) + 1000000000\r\n    }`; // Genera un número de teléfono aleatorio\r\n    const randomNameUser = `${givenName}${familyName}${Math.floor(\r\n      Math.random() * 1000\r\n    )}`; // Genera un nombre de usuario aleatorio\r\n    const randomPassword = generateRandomString(12); // Genera una contraseña aleatoria\r\n\r\n    setForm({\r\n      name: givenName,\r\n      lastName: familyName,\r\n      email,\r\n      image: imageUrl,\r\n      phone: randomPhone,\r\n      nameUser: randomNameUser,\r\n      password: randomPassword,\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3001/users/createUser\", {\r\n        name: givenName,\r\n        lastName: familyName,\r\n        email,\r\n        image: imageUrl,\r\n        phone: randomPhone,\r\n        nameUser: randomNameUser,\r\n        password: randomPassword,\r\n      });\r\n\r\n      alert(\"Usuario creado con Google: \" + res.data.message);\r\n      const authenticated = await dispatch(\r\n        getUserProfile({ nameUser: randomNameUser, password: randomPassword })\r\n      );\r\n      if (authenticated) navigate(\"/userProfile\"); // Redirige al perfil del usuario\r\n    } catch (error) {\r\n      alert(\"Usuario ya existente, por favor modifique los datos\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Formulario de creación de usuario */}\r\n      <form onSubmit={submitHandler}>\r\n        <div className={style.mainContainer}>\r\n          <label>Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={form.name}\r\n            onChange={onChangeHandler}\r\n            name=\"name\"\r\n          />\r\n          <label>LastName: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={form.lastName}\r\n            onChange={onChangeHandler}\r\n            name=\"lastName\"\r\n          />\r\n          <label>Image: </label>\r\n          <input type=\"file\" onChange={onImageUploadHandler} name=\"image\" />\r\n          {form.image && (\r\n            <img src={form.image} alt=\"Imagen subida\" width=\"100\" />\r\n          )}\r\n          <label>Email: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={form.email}\r\n            onChange={onChangeHandler}\r\n            name=\"email\"\r\n          />\r\n          {errors.email && <span>{errors.email}</span>}\r\n          <label>Phone: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={form.phone}\r\n            onChange={onChangeHandler}\r\n            name=\"phone\"\r\n          />\r\n          <label>NameUser: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={form.nameUser}\r\n            onChange={onChangeHandler}\r\n            name=\"nameUser\"\r\n          />\r\n          <label>Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            value={form.password}\r\n            onChange={onChangeHandler}\r\n            name=\"password\"\r\n          />\r\n          <button type=\"submit\">Enviar</button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Botón de autenticación con Google */}\r\n      <div className={style.oauthContainer}>\r\n        <p>O inicia sesión con Google:</p>\r\n        <GoogleLogin\r\n          clientId=\"133661170359-fkebjnpt8sudfqujbcjbjrtj1cc8veoc.apps.googleusercontent.com\"\r\n          buttonText=\"Login with Google\"\r\n          onSuccess={onSuccessGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}