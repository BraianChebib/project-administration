{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\administracion proyect\\\\client\\\\client\\\\src\\\\components\\\\Navbar\\\\Nav.Bar.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\"; // Importa el componente Link para la navegación\nimport { useSelector } from \"react-redux\"; // Importa el hook useSelector para acceder al estado de Redux\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Importa estilos de Bootstrap\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\"; // Importa scripts de Bootstrap\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const authenticated = useSelector(state => state.isAuthenticated); // Obtiene el estado de autenticación del usuario\n  const adminUser = useSelector(state => state.profileUser); // Obtiene el perfil del usuario desde Redux\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"containerNavBar\",\n    className: \"container-fluid\",\n    children: [\" \", authenticated === true && adminUser.admin === true &&\n    /*#__PURE__*/\n    // Condición para mostrar el NavBar solo si el usuario está autenticado y es administrador\n    _jsxDEV(\"div\", {\n      className: \"card text-center\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav nav-tabs card-header-tabs\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/home\",\n              children: [\" \", \"Home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/userProfile\",\n              children: [\" \", \"UserProfile\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(NavBar, \"xM16jEpKChp+MPGOFlLQVr4MNo8=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = NavBar;\nexport default NavBar; // Exporta el componente NavBar\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["Link","useSelector","jsxDEV","_jsxDEV","NavBar","_s","authenticated","state","isAuthenticated","adminUser","profileUser","id","className","children","admin","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/components/Navbar/Nav.Bar.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\"; // Importa el componente Link para la navegación\r\nimport { useSelector } from \"react-redux\"; // Importa el hook useSelector para acceder al estado de Redux\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Importa estilos de Bootstrap\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\"; // Importa scripts de Bootstrap\r\n\r\nconst NavBar = () => {\r\n  const authenticated = useSelector((state) => state.isAuthenticated); // Obtiene el estado de autenticación del usuario\r\n  const adminUser = useSelector((state) => state.profileUser); // Obtiene el perfil del usuario desde Redux\r\n\r\n  return (\r\n    <div id=\"containerNavBar\" className=\"container-fluid\">\r\n      {\" \"}\r\n      {/* Contenedor principal del NavBar */}\r\n      {authenticated === true &&\r\n        adminUser.admin === true && ( // Condición para mostrar el NavBar solo si el usuario está autenticado y es administrador\r\n          <div className=\"card text-center\">\r\n            {\" \"}\r\n            {/* Tarjeta que contiene las opciones de navegación */}\r\n            <div className=\"card-header\">\r\n              {\" \"}\r\n              {/* Cabecera de la tarjeta */}\r\n              <ul className=\"nav nav-tabs card-header-tabs\">\r\n                {\" \"}\r\n                {/* Lista de navegación con pestañas */}\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  {/* Elemento de la lista */}\r\n                  {/* Remover el <a> y dejar solo <Link> */}\r\n                  <Link className=\"nav-link\" to=\"/home\">\r\n                    {\" \"}\r\n                    {/* Enlace a la página de inicio */}\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  {/* Otro elemento de la lista */}\r\n                  <Link className=\"nav-link\" to=\"/userProfile\">\r\n                    {\" \"}\r\n                    {/* Enlace al perfil del usuario */}\r\n                    UserProfile\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar; // Exporta el componente NavBar\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AACzC,SAASC,WAAW,QAAQ,aAAa,CAAC,CAAC;AAC3C,OAAO,sCAAsC,CAAC,CAAC;AAC/C,OAAO,2CAA2C,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,aAAa,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACC,eAAe,CAAC,CAAC,CAAC;EACrE,MAAMC,SAAS,GAAGR,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACG,WAAW,CAAC,CAAC,CAAC;;EAE7D,oBACEP,OAAA;IAAKQ,EAAE,EAAC,iBAAiB;IAACC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,GAClD,GAAG,EAEHP,aAAa,KAAK,IAAI,IACrBG,SAAS,CAACK,KAAK,KAAK,IAAI;IAAA;IAAM;IAC5BX,OAAA;MAAKS,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAC9B,GAAG,eAEJV,OAAA;QAAKS,SAAS,EAAC,aAAa;QAAAC,QAAA,GACzB,GAAG,eAEJV,OAAA;UAAIS,SAAS,EAAC,+BAA+B;UAAAC,QAAA,GAC1C,GAAG,eAEJV,OAAA;YAAIS,SAAS,EAAC,UAAU;YAAAC,QAAA,GACrB,GAAG,eAGJV,OAAA,CAACH,IAAI;cAACY,SAAS,EAAC,UAAU;cAACG,EAAE,EAAC,OAAO;cAAAF,QAAA,GAClC,GAAG,EACgC,MAEtC;YAAA;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACLhB,OAAA;YAAIS,SAAS,EAAC,UAAU;YAAAC,QAAA,GACrB,GAAG,eAEJV,OAAA,CAACH,IAAI;cAACY,SAAS,EAAC,UAAU;cAACG,EAAE,EAAC,cAAc;cAAAF,QAAA,GACzC,GAAG,EACgC,aAEtC;YAAA;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV,CAAC;AAACd,EAAA,CA5CID,MAAM;EAAA,QACYH,WAAW,EACfA,WAAW;AAAA;AAAAmB,EAAA,GAFzBhB,MAAM;AA8CZ,eAAeA,MAAM,CAAC,CAAC;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}