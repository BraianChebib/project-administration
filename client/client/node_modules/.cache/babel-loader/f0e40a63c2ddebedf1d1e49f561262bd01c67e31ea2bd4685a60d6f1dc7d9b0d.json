{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\administracion proyect\\\\client\\\\client\\\\src\\\\components\\\\Posts\\\\GetPosts\\\\GetPostsUser.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { refreshProfileUser } from \"../../../redux/actions\";\nimport { useEffect, useState } from \"react\";\nimport \"./Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetPostsUser = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.profileUser);\n  const [posts, setPosts] = useState([]); // Cambiar a arreglo vacío inicialmente\n  const [userDataFetched, setUserDataFetched] = useState(false); //este estado local cambia a true cuando los posteos fueron procesados para mostrar los datos del usuario que lo creo\n\n  const allPostsAdmin = async () => {\n    const allPosts = await axios.get(\"http://localhost:3001/postUser\");\n    setPosts(allPosts.data); // Asegúrate de obtener los datos correctos\n  };\n  const refreshProfile = async () => {\n    try {\n      await dispatch(refreshProfileUser(userId));\n    } catch (error) {\n      console.error(\"Error al recargar el perfil:\", error);\n    }\n  };\n  const getUserData = async postId => {\n    try {\n      const response = await axios.get(`http://localhost:3001/postUser/relationUser/${postId}`);\n      return response.data.User; // Asegúrate de que Users sea la propiedad correcta\n    } catch (error) {\n      console.error(Error`al obtener ${postId}:`, error.response.data);\n      throw error; // Re-lanzar el error para que se maneje en el mapa\n    }\n  };\n  const fetchUserDataForPosts = async () => {\n    const userPromises = posts.map(async post => {\n      if (post.id) {\n        // Verifica que UserId tenga un valor\n        const user = await getUserData(post.id);\n        return {\n          ...post,\n          user\n        }; // Añade los datos del usuario al post\n      }\n      return post; // Retorna el post sin usuario si UserId no es válido\n    });\n    const postsWithUsers = await Promise.all(userPromises);\n    setPosts(postsWithUsers);\n  };\n  useEffect(() => {\n    refreshProfile();\n    allPostsAdmin();\n  }, [userId]);\n  useEffect(() => {\n    //este useEffect marca como true a los posts ya procesados para mostrar los datos del usuario\n    const fetchUserDataIfNeeded = async () => {\n      if (!userDataFetched && posts.length > 0) {\n        await fetchUserDataForPosts();\n        setUserDataFetched(true);\n      }\n    };\n    fetchUserDataIfNeeded();\n  }, [posts, userDataFetched]);\n  const editCommentHandler = async postId => {\n    navigate(`/editPosts/${userId}/${postId}`);\n    await refreshProfile();\n  };\n  const onClickNewPostHandler = async () => {\n    navigate(`/createPost/${userId}`);\n    await refreshProfile();\n  };\n  const onclickDeleteHandler = async id => {\n    const confirmDelete = window.confirm(\"¿Estás seguro de que deseas eliminar este post?\");\n    if (confirmDelete) {\n      try {\n        await axios.delete(`http://localhost:3001/postUser/deletePost/${id}`);\n        alert(\"Posteo eliminado correctamente\");\n        await refreshProfile();\n      } catch (error) {\n        alert(\"Error al eliminar el post: \" + error.message);\n      }\n    }\n  };\n  const onClickBackHandler = () => {\n    navigate(\"/userProfile\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Posts User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allPotsUser\",\n      children: user.admin === true ? posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemPostUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postUsers\",\n          children: [post.user && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Usuario: \", post.user.name, \" \", post.user.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this) // Muestra los datos del usuario\n          , /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: post.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemPostUserButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editCommentHandler(post.id),\n            children: \"Edit Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onclickDeleteHandler(post.id),\n            className: \"deletePost\",\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay posts disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this) : user.Posts && user.Posts.length > 0 ? user.Posts.map(us => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemPostUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: us.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemPostUserButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editCommentHandler(us.id),\n            children: \"Edit Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onclickDeleteHandler(us.id),\n            className: \"deletePost\",\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, us.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemPostUserButton\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickNewPostHandler,\n        children: \"Crear un nuevo Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickBackHandler,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(GetPostsUser, \"fVlv8JbqNDN2LRdZnW45fH7ViZM=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector];\n});\n_c = GetPostsUser;\nexport default GetPostsUser;\nvar _c;\n$RefreshReg$(_c, \"GetPostsUser\");","map":{"version":3,"names":["axios","useDispatch","useSelector","useNavigate","useParams","refreshProfileUser","useEffect","useState","jsxDEV","_jsxDEV","GetPostsUser","_s","userId","navigate","dispatch","user","state","profileUser","posts","setPosts","userDataFetched","setUserDataFetched","allPostsAdmin","allPosts","get","data","refreshProfile","error","console","getUserData","postId","response","User","Error","fetchUserDataForPosts","userPromises","map","post","id","postsWithUsers","Promise","all","fetchUserDataIfNeeded","length","editCommentHandler","onClickNewPostHandler","onclickDeleteHandler","confirmDelete","window","confirm","delete","alert","message","onClickBackHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","admin","name","lastName","comment","onClick","Posts","us","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/administracion proyect/client/client/src/components/Posts/GetPosts/GetPostsUser.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { refreshProfileUser } from \"../../../redux/actions\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./Posts.css\";\r\n\r\nconst GetPostsUser = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.profileUser);\r\n  const [posts, setPosts] = useState([]); // Cambiar a arreglo vacío inicialmente\r\n  const [userDataFetched, setUserDataFetched] = useState(false); //este estado local cambia a true cuando los posteos fueron procesados para mostrar los datos del usuario que lo creo\r\n\r\n  const allPostsAdmin = async () => {\r\n    const allPosts = await axios.get(\"http://localhost:3001/postUser\");\r\n    setPosts(allPosts.data); // Asegúrate de obtener los datos correctos\r\n  };\r\n\r\n  const refreshProfile = async () => {\r\n    try {\r\n      await dispatch(refreshProfileUser(userId));\r\n    } catch (error) {\r\n      console.error(\"Error al recargar el perfil:\", error);\r\n    }\r\n  };\r\n\r\n  const getUserData = async (postId) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3001/postUser/relationUser/${postId}`\r\n      );\r\n      return response.data.User; // Asegúrate de que Users sea la propiedad correcta\r\n    } catch (error) {\r\n      console.error(Error`al obtener ${postId}:`, error.response.data);\r\n      throw error; // Re-lanzar el error para que se maneje en el mapa\r\n    }\r\n  };\r\n\r\n  const fetchUserDataForPosts = async () => {\r\n    const userPromises = posts.map(async (post) => {\r\n      if (post.id) {\r\n        // Verifica que UserId tenga un valor\r\n        const user = await getUserData(post.id);\r\n        return { ...post, user }; // Añade los datos del usuario al post\r\n      }\r\n      return post; // Retorna el post sin usuario si UserId no es válido\r\n    });\r\n\r\n    const postsWithUsers = await Promise.all(userPromises);\r\n    setPosts(postsWithUsers);\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshProfile();\r\n    allPostsAdmin();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    //este useEffect marca como true a los posts ya procesados para mostrar los datos del usuario\r\n    const fetchUserDataIfNeeded = async () => {\r\n      if (!userDataFetched && posts.length > 0) {\r\n        await fetchUserDataForPosts();\r\n        setUserDataFetched(true);\r\n      }\r\n    };\r\n\r\n    fetchUserDataIfNeeded();\r\n  }, [posts, userDataFetched]);\r\n\r\n  const editCommentHandler = async (postId) => {\r\n    navigate(`/editPosts/${userId}/${postId}`);\r\n    await refreshProfile();\r\n  };\r\n\r\n  const onClickNewPostHandler = async () => {\r\n    navigate(`/createPost/${userId}`);\r\n    await refreshProfile();\r\n  };\r\n\r\n  const onclickDeleteHandler = async (id) => {\r\n    const confirmDelete = window.confirm(\r\n      \"¿Estás seguro de que deseas eliminar este post?\"\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(`http://localhost:3001/postUser/deletePost/${id}`);\r\n        alert(\"Posteo eliminado correctamente\");\r\n        await refreshProfile();\r\n      } catch (error) {\r\n        alert(\"Error al eliminar el post: \" + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickBackHandler = () => {\r\n    navigate(\"/userProfile\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>Posts User</h3>\r\n\r\n      <div className=\"allPotsUser\">\r\n        {user.admin === true ? (\r\n          posts.length > 0 ? (\r\n            posts.map((post) => (\r\n              <div className=\"itemPostUser\" key={post.id}>\r\n                <div className=\"postUsers\">\r\n                  {post.user && (\r\n                    <p>\r\n                      Usuario: {post.user.name} {post.user.lastName}\r\n                    </p> // Muestra los datos del usuario\r\n                  )}\r\n                  <h4>{post.comment}</h4>\r\n                </div>\r\n                <div className=\"itemPostUserButton\">\r\n                  <button onClick={() => editCommentHandler(post.id)}>\r\n                    Edit Comment\r\n                  </button>\r\n                  <button\r\n                    onClick={() => onclickDeleteHandler(post.id)}\r\n                    className=\"deletePost\"\r\n                  >\r\n                    Delete Post\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No hay posts disponibles</p>\r\n          )\r\n        ) : user.Posts && user.Posts.length > 0 ? (\r\n          user.Posts.map((us) => (\r\n            <div className=\"itemPostUser\" key={us.id}>\r\n              <div>\r\n                <h4>{us.comment}</h4>\r\n              </div>\r\n              <div className=\"itemPostUserButton\">\r\n                <button onClick={() => editCommentHandler(us.id)}>\r\n                  Edit Comment\r\n                </button>\r\n                <button\r\n                  onClick={() => onclickDeleteHandler(us.id)}\r\n                  className=\"deletePost\"\r\n                >\r\n                  Delete Post\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Cargando...</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"itemPostUserButton\">\r\n        <button onClick={onClickNewPostHandler}>Crear un nuevo Post</button>\r\n        <button onClick={onClickBackHandler}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetPostsUser;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,kBAAkB,QAAQ,wBAAwB;AAC3D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,IAAI,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/D,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,gCAAgC,CAAC;IAClEL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMZ,QAAQ,CAACT,kBAAkB,CAACO,MAAM,CAAC,CAAC;IAC5C,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,WAAW,GAAG,MAAOC,MAAM,IAAK;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM/B,KAAK,CAACwB,GAAG,CAC9B,+CAA+CM,MAAM,EACvD,CAAC;MACD,OAAOC,QAAQ,CAACN,IAAI,CAACO,IAAI,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACM,KAAK,cAAcH,MAAM,GAAG,EAAEH,KAAK,CAACI,QAAQ,CAACN,IAAI,CAAC;MAChE,MAAME,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMO,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,MAAMC,YAAY,GAAGjB,KAAK,CAACkB,GAAG,CAAC,MAAOC,IAAI,IAAK;MAC7C,IAAIA,IAAI,CAACC,EAAE,EAAE;QACX;QACA,MAAMvB,IAAI,GAAG,MAAMc,WAAW,CAACQ,IAAI,CAACC,EAAE,CAAC;QACvC,OAAO;UAAE,GAAGD,IAAI;UAAEtB;QAAK,CAAC,CAAC,CAAC;MAC5B;MACA,OAAOsB,IAAI,CAAC,CAAC;IACf,CAAC,CAAC;IAEF,MAAME,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;IACtDhB,QAAQ,CAACoB,cAAc,CAAC;EAC1B,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACdoB,cAAc,CAAC,CAAC;IAChBJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZN,SAAS,CAAC,MAAM;IACd;IACA,MAAMoC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI,CAACtB,eAAe,IAAIF,KAAK,CAACyB,MAAM,GAAG,CAAC,EAAE;QACxC,MAAMT,qBAAqB,CAAC,CAAC;QAC7Bb,kBAAkB,CAAC,IAAI,CAAC;MAC1B;IACF,CAAC;IAEDqB,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACxB,KAAK,EAAEE,eAAe,CAAC,CAAC;EAE5B,MAAMwB,kBAAkB,GAAG,MAAOd,MAAM,IAAK;IAC3CjB,QAAQ,CAAC,cAAcD,MAAM,IAAIkB,MAAM,EAAE,CAAC;IAC1C,MAAMJ,cAAc,CAAC,CAAC;EACxB,CAAC;EAED,MAAMmB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxChC,QAAQ,CAAC,eAAeD,MAAM,EAAE,CAAC;IACjC,MAAMc,cAAc,CAAC,CAAC;EACxB,CAAC;EAED,MAAMoB,oBAAoB,GAAG,MAAOR,EAAE,IAAK;IACzC,MAAMS,aAAa,GAAGC,MAAM,CAACC,OAAO,CAClC,iDACF,CAAC;IAED,IAAIF,aAAa,EAAE;MACjB,IAAI;QACF,MAAM/C,KAAK,CAACkD,MAAM,CAAC,6CAA6CZ,EAAE,EAAE,CAAC;QACrEa,KAAK,CAAC,gCAAgC,CAAC;QACvC,MAAMzB,cAAc,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdwB,KAAK,CAAC,6BAA6B,GAAGxB,KAAK,CAACyB,OAAO,CAAC;MACtD;IACF;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BxC,QAAQ,CAAC,cAAc,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA;IAAK6C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB9C,OAAA;MAAA8C,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnBlD,OAAA;MAAK6C,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBxC,IAAI,CAAC6C,KAAK,KAAK,IAAI,GAClB1C,KAAK,CAACyB,MAAM,GAAG,CAAC,GACdzB,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACb5B,OAAA;QAAK6C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B9C,OAAA;UAAK6C,SAAS,EAAC,WAAW;UAAAC,QAAA,GACvBlB,IAAI,CAACtB,IAAI,iBACRN,OAAA;YAAA8C,QAAA,GAAG,WACQ,EAAClB,IAAI,CAACtB,IAAI,CAAC8C,IAAI,EAAC,GAAC,EAACxB,IAAI,CAACtB,IAAI,CAAC+C,QAAQ;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,CAAC;UACN,eACDlD,OAAA;YAAA8C,QAAA,EAAKlB,IAAI,CAAC0B;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACNlD,OAAA;UAAK6C,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjC9C,OAAA;YAAQuD,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAACP,IAAI,CAACC,EAAE,CAAE;YAAAiB,QAAA,EAAC;UAEpD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTlD,OAAA;YACEuD,OAAO,EAAEA,CAAA,KAAMlB,oBAAoB,CAACT,IAAI,CAACC,EAAE,CAAE;YAC7CgB,SAAS,EAAC,YAAY;YAAAC,QAAA,EACvB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GAnB2BtB,IAAI,CAACC,EAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBrC,CACN,CAAC,gBAEFlD,OAAA;QAAA8C,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/B,GACC5C,IAAI,CAACkD,KAAK,IAAIlD,IAAI,CAACkD,KAAK,CAACtB,MAAM,GAAG,CAAC,GACrC5B,IAAI,CAACkD,KAAK,CAAC7B,GAAG,CAAE8B,EAAE,iBAChBzD,OAAA;QAAK6C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B9C,OAAA;UAAA8C,QAAA,eACE9C,OAAA;YAAA8C,QAAA,EAAKW,EAAE,CAACH;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACNlD,OAAA;UAAK6C,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjC9C,OAAA;YAAQuD,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAACsB,EAAE,CAAC5B,EAAE,CAAE;YAAAiB,QAAA,EAAC;UAElD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTlD,OAAA;YACEuD,OAAO,EAAEA,CAAA,KAAMlB,oBAAoB,CAACoB,EAAE,CAAC5B,EAAE,CAAE;YAC3CgB,SAAS,EAAC,YAAY;YAAAC,QAAA,EACvB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GAd2BO,EAAE,CAAC5B,EAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAenC,CACN,CAAC,gBAEFlD,OAAA;QAAA8C,QAAA,EAAG;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAClB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENlD,OAAA;MAAK6C,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC9C,OAAA;QAAQuD,OAAO,EAAEnB,qBAAsB;QAAAU,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpElD,OAAA;QAAQuD,OAAO,EAAEX,kBAAmB;QAAAE,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChD,EAAA,CA7JID,YAAY;EAAA,QACGN,SAAS,EACXD,WAAW,EACXF,WAAW,EACfC,WAAW;AAAA;AAAAiE,EAAA,GAJpBzD,YAAY;AA+JlB,eAAeA,YAAY;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}